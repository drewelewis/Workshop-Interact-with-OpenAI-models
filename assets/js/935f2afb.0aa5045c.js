"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Welcome","href":"/","docId":"Introduction","unlisted":false},{"type":"link","label":"Setup","href":"/Setup","docId":"Setup","unlisted":false},{"type":"link","label":"Explore AI Models","href":"/Explore-AI-Models","docId":"Explore-AI-Models","unlisted":false},{"type":"link","label":"Understanding LLM\'s","href":"/Understanding-LLMs","docId":"Understanding-LLMs","unlisted":false},{"type":"link","label":"Lab 1: Basic Prompting","href":"/Basic-Prompting","docId":"Basic-Prompting","unlisted":false},{"type":"link","label":"Lab 2: Prompt Engineering Techniques","href":"/Prompt-Engineering-Techniques","docId":"Prompt-Engineering-Techniques","unlisted":false},{"type":"link","label":"Lab 3: Response grounding","href":"/Response-grounding","docId":"Response-grounding","unlisted":false},{"type":"link","label":"Lab 4: Ways of \'learning\'","href":"/Ways-of-learning","docId":"Ways-of-learning","unlisted":false},{"type":"link","label":"Lab 5: Function Calling","href":"/Function-Calling","docId":"Function-Calling","unlisted":false},{"type":"link","label":"Lab 6: Create Images","href":"/Create-Images","docId":"Create-Images","unlisted":false},{"type":"link","label":"Recap: What we\'ve learned","href":"/Learnings-and-Resources","docId":"Learnings-and-Resources","unlisted":false},{"type":"link","label":"Other things to try","href":"/Extra-Credit","docId":"Extra-Credit","unlisted":false}]},"docs":{"Basic-Prompting":{"id":"Basic-Prompting","title":"Lab 1: Basic Prompting","description":"Prompt Engineering is the process of adding additional context to the prompt to provide \\"grounding\\" to the AI model and make it more likely to produce the desired response and less likely to produce undesirable outputs. For example, in a chatbot application, the system would inject additional instructions and data into the prompt before the user\'s actual input, to provide context to the model.","sidebar":"tutorialSidebar"},"Create-Images":{"id":"Create-Images","title":"Lab 6: Create Images","description":"","sidebar":"tutorialSidebar"},"Explore-AI-Models":{"id":"Explore-AI-Models","title":"Explore AI Models","description":"Before you begin this section, you must have completed the Setup to get the relevant access key.","sidebar":"tutorialSidebar"},"Extra-Credit":{"id":"Extra-Credit","title":"Other things to try","description":"Completed the workshop already? Need something else to do? Here are some other things to try","sidebar":"tutorialSidebar"},"Function-Calling":{"id":"Function-Calling","title":"Lab 5: Function Calling","description":"System Message","sidebar":"tutorialSidebar"},"Introduction":{"id":"Introduction","title":"Welcome","description":"This is a 60-minute workshop that teaches you how to work with the OpenAI model ChatGPT (gpt-3.5-turbo). By the end of this workshop you should be able to:","sidebar":"tutorialSidebar"},"Learnings-and-Resources":{"id":"Learnings-and-Resources","title":"Recap: What we\'ve learned","description":"We hope that in the last hour, you\'ve learned what natural language generative AI models are and how they work, how to access them in Azure OpenAI Service, and started on the path to building applications with them. Here are some key points to remember:","sidebar":"tutorialSidebar"},"Prompt-Engineering-Techniques":{"id":"Prompt-Engineering-Techniques","title":"Lab 2: Prompt Engineering Techniques","description":"As we\'ve seen, natural language Generative AI models can produce unexpected or unwanted responses to prompts. This can be caused by any number of factors, including:","sidebar":"tutorialSidebar"},"Response-grounding":{"id":"Response-grounding","title":"Lab 3: Response grounding","description":"Building on top of the system message approach, grounding the response means diving into what is it you want your agent to do/not do. Below are a few examples of ways you can build a responsible agent that will perform well in the real world and when bad actors are trying to deter the agent.","sidebar":"tutorialSidebar"},"Setup":{"id":"Setup","title":"Setup","description":"- Bring your own laptop - this is an hour-long workshop so make sure it\'s charged!","sidebar":"tutorialSidebar"},"Understanding-LLMs":{"id":"Understanding-LLMs","title":"Understanding LLM\'s","description":"What is a Large Language Model (LLM)","sidebar":"tutorialSidebar"},"Ways-of-learning":{"id":"Ways-of-learning","title":"Lab 4: Ways of \'learning\'","description":"This section discusses prompt engineering techniques that can help LLMs solve certain problems more effectively.","sidebar":"tutorialSidebar"}}}')}}]);